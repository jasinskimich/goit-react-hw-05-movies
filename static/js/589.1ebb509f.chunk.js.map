{"version":3,"file":"static/js/589.1ebb509f.chunk.js","mappings":"uQAAA,IAAMA,EAAa,mCAEnB,SAASC,IACP,OAAOC,MAAM,2DAAD,OACiDF,IAC3DG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CACD,SAASC,EAAaC,GACpB,OAAOL,MAAM,qDAAD,OAC2CF,EAD3C,kBAC+DO,IACzEJ,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CAED,SAASG,EAAkBC,GACzB,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,oBAC+CT,IACzDG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CACD,SAASK,EAAkBD,GACzB,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACuDT,IACjEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,CACD,SAASM,EAAkBF,GACzB,OAAOP,MAAM,sCAAD,OAC4BO,EAD5B,4BACuDT,IACjEG,MAAK,SAAAC,GAAQ,OAAIA,EAASC,MAAb,GAChB,C,qLCgBD,EAtCa,WACX,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA8BI,EAAAA,EAAAA,UAAS,MAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAkBD,GAASN,MAAK,SAAAc,GAC9BF,EAAWE,EAAKC,KACjB,GACF,GAAE,CAACT,IAECK,GAKH,8BACE,wBACGA,EAAQK,KAAI,SAAAC,GAAM,OACjB,2BACE,gBACEC,IACED,EAAOE,aAAP,yCACsCF,EAAOE,cACzCC,EAENC,MAAM,MACNC,OAAO,MACPC,IAAKN,EAAOO,QAEd,uBAAIP,EAAOO,QACX,uCAAeP,EAAOQ,eAZfR,EAAOS,GADC,SANhB,uCAyBV,C","sources":["api.js","components/Cast/Cast.js"],"sourcesContent":["const MY_API_KEY = 'ba80dd2d26907ca844be2662df6ef522';\n\nfunction getTrendingMovies() {\n  return fetch(\n    `https://api.themoviedb.org/3/trending/movie/day?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\nfunction searchMovies(query) {\n  return fetch(\n    `https://api.themoviedb.org/3/search/movie?api_key=${MY_API_KEY}&query=${query}`\n  ).then(response => response.json());\n}\n\nfunction fetchMovieDetails(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\nfunction fetchMovieCredits(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\nfunction fetchMovieReviews(movieId) {\n  return fetch(\n    `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=${MY_API_KEY}`\n  ).then(response => response.json());\n}\n\nexport {\n  getTrendingMovies,\n  searchMovies,\n  fetchMovieDetails,\n  fetchMovieCredits,\n  fetchMovieReviews,\n};\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCredits } from '../../api';\nimport NotFoundImage from '../../images/portrait-not-found.png';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [credits, setCredits] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCredits(movieId).then(data => {\n      setCredits(data.cast);\n    });\n  }, [movieId]);\n\n  if (!credits) {\n    return <div>Loading...</div>;\n  }\n\n  return (\n    <section>\n      <ul>\n        {credits.map(credit => (\n          <li key={credit.id}>\n            <img\n              src={\n                credit.profile_path\n                  ? `https://image.tmdb.org/t/p/w185${credit.profile_path}`\n                  : NotFoundImage\n              }\n              width=\"185\"\n              height=\"278\"\n              alt={credit.name}\n            />\n            <p>{credit.name}</p>\n            <p>Character: {credit.character}</p>\n          </li>\n        ))}\n      </ul>\n    </section>\n  );\n};\n\nexport default Cast;"],"names":["MY_API_KEY","getTrendingMovies","fetch","then","response","json","searchMovies","query","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","useParams","useState","credits","setCredits","useEffect","data","cast","map","credit","src","profile_path","NotFoundImage","width","height","alt","name","character","id"],"sourceRoot":""}